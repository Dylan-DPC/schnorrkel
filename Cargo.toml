[package]
name = "schnorrkel"
version = "0.11.0"
authors = ["Jeff Burdges <jeff@web3.foundation>"]
readme = "README.md"
license = "BSD-3-Clause"
repository = "https://github.com/w3f/schnorrkel"
documentation = "https://docs.rs/schnorrkel"
keywords = ["cryptography", "ed25519", "curve25519", "signature", "ECC"]
categories = ["cryptography", "no-std"]
description = "Schnorr VRF, signatures, etc. using the Ristretto group"
exclude = [ ".gitignore", "res/*" ]
edition = "2021"

[dependencies]
aead = { version = "0.4.3", default-features = false, optional = true }
arrayref = { version = "0.3.6", default-features = false }
# needs to match parity-scale-code which is "=0.7.0"
arrayvec = { version = "0.7.0", default-features = false }
curve25519-dalek = { package = "curve25519-dalek-ng", version = "4.1.1", default-features = false }
subtle = { package = "subtle-ng", version = "2.5.0", default-features = false }
merlin = { version = "3.0.0", default-features = false }
rand_core = { version = "0.6.2", default-features = false }
serde_crate = { version = "1.0.130", package = "serde", default-features = false, optional = true }
serde_bytes = { version = "0.11.5", default-features = false, optional = true }
cfg-if = { version = "1.0.0", optional = true }
sha2 = { version = "0.9.8", default-features = false }
failure = { version = "0.1.8", default-features = false, optional = true }
zeroize = { version = "1.4.2", default-features = false, features = ["zeroize_derive"] }

[dev-dependencies]
rand = "0.8.4"
rand_chacha = { version = "0.3.1", default-features = false }
hex-literal = "0.4.1"
sha3 = "0.9.1"
bincode = "1.3.3"
criterion = "0.3.5"
serde_json = "1.0.68"

[[bench]]
name = "schnorr_benchmarks"
harness = false

[features]
default = ["std", "u64_backend", "getrandom"] # "rand"
preaudit_deprecated = []
nightly = ["curve25519-dalek/nightly"] # "zeroize/nightly"
alloc = ["curve25519-dalek/alloc", "rand_core/alloc", "serde_bytes/alloc"]
std = ["getrandom", "curve25519-dalek/std", "serde_bytes/std"] # "failure/std"
asm = ["sha2/asm"]
u64_backend = ["curve25519-dalek/u64_backend"]
u32_backend = ["curve25519-dalek/u32_backend"]
avx2_backend = ["curve25519-dalek/avx2_backend"]
serde = ["serde_crate", "serde_bytes", "cfg-if"]
# We cannot make getrandom a direct dependency because rand_core makes
# getrandom a feature name, which requires forwarding.
getrandom = ["rand_core/getrandom"]
# We thus cannot forward the wasm-bindgen feature of getrandom,
# but our consumers could depend upon getrandom and activate its
# wasm-bindgen feature themselve, which works due to cargo features
# being additive.
# wasm-bindgen = ["getrandom/wasm-bindgen"]
# See https://github.com/rust-lang/cargo/issues/9210
# and https://github.com/w3f/schnorrkel/issues/65#issuecomment-786923588

